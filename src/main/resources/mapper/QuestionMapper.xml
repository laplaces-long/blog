<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.blog.model.Question">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="createid" jdbcType="INTEGER" property="createid" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="createtime" jdbcType="BIGINT" property="createtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.model.Question">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, createid, comment_count, view_count, like_count, tag, createtime
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>

  <select id="getById" resultType="com.blog.model.Question">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from question where id=#{id}
  </select>

  <select id="getByTag" resultType="com.blog.model.Question">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from question
    where tag REGEXP #{result} and id!=#{id} limit 0,10
  </select>

  <select id="countById" resultType="java.lang.Integer">
    select count(1) from question where createid=#{userid}
  </select>

  <select id="listById" resultType="com.blog.model.Question">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from question where createid=#{userid}
  </select>

  <update id="increaseView">
    update question set view_count = view_count where id=#{id}
  </update>

  <update id="increaseComment">
    update question set comment_count=comment_count+1 where id=#{parentId}
  </update>

  <update id="updateQuestion">
    update question set title=#{title},description=#{description},tag=#{tag},createtime=#{createtime} where id=#{id}
  </update>

  <insert id="createQuestion" >
    insert into question(title,description,createid,tag,createtime) values (#{title},#{description},#{createid},#{tag},#{createtime})
  </insert>

  <select id="getTopTen" resultType="com.blog.model.Question">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from question order by view_count desc limit 0,10
  </select>

  <select id="list" resultType="com.blog.model.Question">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from question order by createtime desc
  </select>

  <select id="count" resultType="java.lang.Integer">
    select count(1) from question
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.model.Question">
    insert into question (id, title, createid, 
      comment_count, view_count, like_count, 
      tag, createtime, description
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{createid,jdbcType=INTEGER}, 
      #{commentCount,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, 
      #{tag,jdbcType=VARCHAR}, #{createtime,jdbcType=BIGINT}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.Question">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="createid != null">
        createid,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="viewCount != null">
        view_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        #{createid,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.Question">
    update question
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createid != null">
        createid = #{createid,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null">
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.model.Question">
    update question
    set title = #{title,jdbcType=VARCHAR},
      createid = #{createid,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=BIGINT},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.Question">
    update question
    set title = #{title,jdbcType=VARCHAR},
      createid = #{createid,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      tag = #{tag,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>