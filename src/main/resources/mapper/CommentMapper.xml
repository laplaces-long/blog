<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.blog.model.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="commentor" jdbcType="INTEGER" property="commentor" />
    <result column="createtime" jdbcType="BIGINT" property="createtime" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="commentcount" jdbcType="INTEGER" property="commentcount" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_id, type, commentor, createtime, like_count, content, commentcount
  </sql>

  <update id="increaseCommentCount">
    update comment set commentcount=commentcount+1 where id=#{parentId}
  </update>

  <select id="getParentIdById" resultType="java.lang.Integer">
    select parent_id from comment where id=#{id}
  </select>

  <select id="getContentById" resultType="java.lang.String">
    select content from comment where id=#{outerid}
  </select>

  <select id="getParentById" resultType="com.blog.model.Comment">
    select
    <include refid="Base_Column_List"/>
    from comment where id=#{parentId}
  </select>

  <select id="getCommentById" resultType="com.blog.model.Comment">
    select
    <include refid="Base_Column_List"/>
    from comment
    where parent_id=#{id} and type=#{type} order by createtime desc
  </select>

  <insert id="insertComment">
    insert into comment(parent_id, type, commentor, createtime, content)
    values (#{parentId},#{type},#{commentor},#{createtime},#{content})
  </insert>

  <select id="getById" resultType="com.blog.model.Comment">
    select
    <include refid="Base_Column_List"/>
    from comment
    where parent_id=#{id} order by createtime desc
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blog.model.Comment">
    insert into comment (id, parent_id, type, 
      commentor, createtime, like_count, 
      content, commentcount)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{commentor,jdbcType=INTEGER}, #{createtime,jdbcType=BIGINT}, #{likeCount,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{commentcount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.model.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="commentor != null">
        commentor,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="commentcount != null">
        commentcount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="commentor != null">
        #{commentor,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentcount != null">
        #{commentcount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.model.Comment">
    update comment
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="commentor != null">
        commentor = #{commentor,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentcount != null">
        commentcount = #{commentcount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.model.Comment">
    update comment
    set parent_id = #{parentId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      commentor = #{commentor,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=BIGINT},
      like_count = #{likeCount,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      commentcount = #{commentcount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>